# 88-合并两个有序数组

[88-合并两个有序数组](https://leetcode.cn/problems/merge-sorted-array/description/?envType=study-plan-v2&envId=meituan-2023-fall-sprint)，难度简单

![image-20230826003110613](https://raw.githubusercontent.com/lqyspace/mypic/master/PicBed/202308260031692.png)

解题思路：倒着遍历，双指针

```java
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
		if(n==0) return;
        if(m==0) {
            for(int i=0; i<nums2.length; i++)
                nums1[i] = nums2[i];
            return;
        }

        int i = nums1.length-1;
        while(i>=0 && m>0 && n>0){
            if(nums1[m-1] > nums2[n-1]){
                nums1[i] = nums1[m-1];
                m--;
            } else {
                nums1[i] = nums2[n-1];
                n--;
            }
            i--;
        }
        // 因为涉及到一个指针已经走到了尽头，但是另一个指针还没有走到尽头
        // 如果m指针走到了尽头而n指针还没有走到尽头，则需要把n剩余元素添加到 m中
        // 如果n指针走到了尽头，而m指针还没有走到尽头，则可以不用管
        while(n>0){
            nums1[i--] = nums2[n-1];
            n--;
        }
    }
}
```

